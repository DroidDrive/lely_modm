#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright (c) 2021, DroidDrive
# -----------------------------------------------------------------------------

# Check for miminum required lbuild version
import lbuild
min_lbuild_version = "1.17.0"
if StrictVersion(getattr(lbuild, "__version__", "0.1.0")) < StrictVersion(min_lbuild_version):
    print("erpc requires at least lbuild v{}, please upgrade!\n"
          "    pip3 install -U lbuild".format(min_lbuild_version))
    exit(1)

# Check for submodule existance and their version
def check_submodules():
    repo = Repo(localpath("."))
    has_error = True
    if any(not sm.module_exists() for sm in repo.submodules):
        print("\n>> lely_modm: One or more git submodules in `lely` is missing!\n"
              ">> lely_modm: Please checkout the submodules:\n\n"
              "    cd lely_modm\n"
              "    git submodule update --init\n")
        exit(1)
    elif any(sm.hexsha != sm.module().commit().hexsha for sm in repo.submodules):
        print("\n>> lely_modm: One or more git submodules in `modm/ext/` is not up-to-date!\n"
              ">> lely_modm: Please update the submodules:\n\n"
              "    cd lely_modm\n"
              "    git submodule sync\n"
              "    git submodule update --init\n")

check_submodules()

# =============================================================================


def getRepoName(env={}):
    return "lely_modm"

def init(repo):
    repo.name = getRepoName()
    repo.description = FileReader("README.md")
    #repo.add_ignore_patterns("*/*.lb")
    #repo.add_option(
    #    TargetOption(name="target",
    #                 description="Meta-HAL target device",
    #                 enumeration=devices))
    repo.add_query(EnvironmentQuery(name="repoName", factory=getRepoName))

def prepare(repo, options):
    repo.add_modules_recursive("lely", modulefile="*.lb")

def build(env):
    #env.collect(":build:path.include", "myRepo/src")
    pass